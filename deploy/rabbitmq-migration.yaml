apiVersion: batch/v1
kind: Job
metadata:
  generateName: diescheite-raygun-rabbitmq-migration
spec:
  template:
    spec:
      imagePullSecrets:
        - name: pntregistry.azurecr.io
      containers:
      - name: diescheite-raygun-rabbitmq-migration
        image: pntregistry.azurecr.io/amqp-tools
        env:
          - name: RABBIT_HOST
            value: rabbitmq-management
        command: ["/bin/sh"]
        args:
          - "-c"
          - |
            rabbitmqadmin declare exchange --host=$RABBIT_HOST --vhost=$RABBIT_VHOST --user=$RABBIT_USER --password=$RABBIT_PWD name=diescheite.raygun.dlx type=fanout durable=true
            rabbitmqadmin declare queue --host=$RABBIT_HOST --vhost=$RABBIT_VHOST --user=$RABBIT_USER --password=$RABBIT_PWD name=diescheite.raygun durable=true 'arguments={"x-dead-letter-exchange":"diescheite.raygun.dlx"}'
            rabbitmqadmin declare queue --host=$RABBIT_HOST --vhost=$RABBIT_VHOST --user=$RABBIT_USER --password=$RABBIT_PWD name=diescheite.raygun.dlq durable=true
            rabbitmqadmin declare binding --host=$RABBIT_HOST --vhost=$RABBIT_VHOST --user=$RABBIT_USER --password=$RABBIT_PWD source=bergendalhs.oms.orderimport destination=bergendalhs.oms.orderimport.queue
            rabbitmqadmin declare binding --host=$RABBIT_HOST --vhost=$RABBIT_VHOST --user=$RABBIT_USER --password=$RABBIT_PWD source=diescheite.raygun.dlx destination=diescheite.raygun.dlq
            rabbitmqadmin declare binding --host=$RABBIT_HOST --vhost=$RABBIT_VHOST --user=$RABBIT_USER --password=$RABBIT_PWD source=diescheite destination=diescheite.raygun
      restartPolicy: Never
  backoffLimit: 4
